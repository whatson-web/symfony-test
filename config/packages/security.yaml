security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    encoders:
        # use your user class name here
        App\Entity\User:
            # bcrypt or argon21 are recommended
            # argon21 is more secure, but requires PHP 7.2 or the Sodium extension
            algorithm: bcrypt

    providers:
        in_memory: { memory: ~ }
        our_db_provider:
            entity:
                class: App\Entity\User

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            provider: our_db_provider
            form_login:
                login_path: app_login
                check_path: app_login
                csrf_token_generator: security.csrf.token_manager
            logout:
                path: app_logout
                target: app_login

            guard:
                authenticators:
                    - App\Security\AppLoginAuthenticator

                # activate different ways to authenticate

                # http_basic: true
                # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

                # form_login:true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
    # - { path: ^/admin, roles: ROLE_ADMIN }
    # - { path: ^/profile, roles: ROLE_USER }
    # - { path: ^/, roles: ROLE_USER }
